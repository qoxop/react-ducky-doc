"use strict";(self.webpackChunkreact_ducky_doc=self.webpackChunkreact_ducky_doc||[]).push([[564],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=p(t),m=o,f=s["".concat(u,".").concat(m)]||s[m]||l[m]||c;return t?r.createElement(f,a(a({ref:n},d),{},{components:t})):r.createElement(f,a({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,a=new Array(c);a[0]=s;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<c;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},2274:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return d},default:function(){return s}});var r=t(7462),o=t(3366),c=(t(7294),t(3905)),a=["components"],i={sidebar_position:2,sidebar_label:"createAction"},u="createAction",p={unversionedId:"API-Reference/reducer-and-actions/createAction",id:"API-Reference/reducer-and-actions/createAction",isDocsHomePage:!1,title:"createAction",description:"\u7528\u4e8e\u5b9a\u4e49 Redux actionType \u548c actionCreator \u7684\u8f85\u52a9\u51fd\u6570\u3002",source:"@site/docs/API-Reference/reducer-and-actions/createAction.md",sourceDirName:"API-Reference/reducer-and-actions",slug:"/API-Reference/reducer-and-actions/createAction",permalink:"/react-ducky-doc/docs/API-Reference/reducer-and-actions/createAction",editUrl:"https://github.com/qoxop/react-ducky-doc/tree/main/docs/API-Reference/reducer-and-actions/createAction.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"createAction"},sidebar:"tutorialSidebar",previous:{title:"createModel",permalink:"/react-ducky-doc/docs/API-Reference/reducer-and-actions/createModel"},next:{title:"createAsyncThunk",permalink:"/react-ducky-doc/docs/API-Reference/reducer-and-actions/createAsyncThunk"}},d=[],l={toc:d};function s(e){var n=e.components,t=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"createaction"},"createAction"),(0,c.kt)("p",null,"\u7528\u4e8e\u5b9a\u4e49 Redux ",(0,c.kt)("inlineCode",{parentName:"p"},"actionType")," \u548c ",(0,c.kt)("inlineCode",{parentName:"p"},"actionCreator")," \u7684\u8f85\u52a9\u51fd\u6570\u3002"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"function createAction(type: any, prepareAction?): ActionCreator\n")),(0,c.kt)("p",null,"\u4ee5\u524d\u7684Redux \u5199\u6cd5\u901a\u5e38\u662f\u5c06 action \u548c\u521b\u5efa action (",(0,c.kt)("inlineCode",{parentName:"p"},"actionCreator"),") \u7684\u65b9\u6cd5\u5206\u522b\u5b9a\u4e49\u7684"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"const INCREMENT = 'counter/increment'\n\nfunction increment(amount: number) {\n  return {\n    type: INCREMENT,\n    payload: amount,\n  }\n}\n\nconst action = increment(3)\n// { type: 'counter/increment', payload: 3 }\n")),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"createAction")," \u5c06\u8fd9\u4e24\u4e2a\u6b65\u9aa4\u878d\u5408\u5728\u4e00\u8d77\u5b9a\u4e49\uff0c\u7b80\u5316\u7684\u7f16\u7801\u6b65\u9aa4\u3002"),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"createAction")," \u8fd4\u56de\u7684 ",(0,c.kt)("inlineCode",{parentName:"p"},"actionCreator")," \u7684 ",(0,c.kt)("inlineCode",{parentName:"p"},"toString")," \u65b9\u6cd5\u88ab\u91cd\u5199\uff0c\u8fd4\u56de\u4f20\u5165\u7684 ",(0,c.kt)("inlineCode",{parentName:"p"},"type")," \u53c2\u6570\u3002\u800c ",(0,c.kt)("inlineCode",{parentName:"p"},"actionCreator")," \u8fd4\u56de\u7684 ",(0,c.kt)("inlineCode",{parentName:"p"},"action")," \u53ca\u5176\u53c2\u6570\u7c7b\u578b\u8981\u6c42\u53ef\u4ee5\u7531\u4f20\u5165\u7684 ",(0,c.kt)("inlineCode",{parentName:"p"},"prepareAction")," \u8fdb\u884c\u81ea\u5b9a\u4e49\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { createAction } from 'react-ducky'\n\nconst increment = createAction<number | undefined>('counter/increment')\n\nlet action = increment()\n// { type: 'counter/increment' }\n\naction = increment(3)\n// returns { type: 'counter/increment', payload: 3 }\n\nconsole.log(increment.toString())\n// 'counter/increment'\n\nconsole.log(`The action type is: ${increment}`)\n// 'The action type is: counter/increment'\n\nconst addTodo = createAction<number | undefined>('todo/add-todo', (text: string) => ({ payload: { text, id: uuid() } }));\n// ActionCreator<number, unknown[]>\naddTodo('todo item~~~');\n// { type: 'todo/add-todo', payload: { text: 'todo item~~~', id: xxxx' } }\n\n")))}s.isMDXComponent=!0}}]);